import{s as Pa,k as aa,a as Q,g as X,i as W,f as v,l as Ca,t as _a,d as wa,e as Oa,c as ka,b as Ea,o as Wa}from"../chunks/scheduler.60fdcb34.js";import{S as Ua,i as Va,c as P,a as _,m as w,t as O,b as k,d as E}from"../chunks/index.c7b4b125.js";import{g as Fa}from"../chunks/navigation.82bf316a.js";import{p as La}from"../chunks/stores.b0332cd2.js";import{s as Na,F as Ja}from"../chunks/index.92f1b852.js";import{T as qa}from"../chunks/textarea.8860c336.js";import{I as Y}from"../chunks/input.b0365756.js";import{B as Ta}from"../chunks/button.0888a59b.js";import{P as Da}from"../chunks/Page.1107c6af.js";/* empty css                                                       */import{z as a}from"../chunks/index.0ec66d4d.js";import Ka from".prisma/client/index-browser";import{f as Ma}from"../chunks/client.3119d533.js";const ia=a.object({id:a.string(),user_id:a.string(),active_expires:a.bigint(),idle_expires:a.bigint()}),Ba=ia.partial(),xa=ia.merge(a.object({user:a.lazy(()=>b)})),$a=Ba.merge(a.object({user:a.lazy(()=>n)})).partial();ia.merge(a.object({user:a.lazy(()=>n)}).partial());const na=a.object({id:a.string(),hashed_password:a.string().nullish(),user_id:a.string()}),Ga=na.partial(),Ha=na.merge(a.object({user:a.lazy(()=>b)})),ja=Ga.merge(a.object({user:a.lazy(()=>n)})).partial();na.merge(a.object({user:a.lazy(()=>n)}).partial());const oa=a.object({id:a.string(),theme:a.string().nullish(),language:a.string().nullish(),userId:a.string().nullish()}),Qa=oa.partial(),Xa=oa.merge(a.object({user:a.lazy(()=>b).nullish()})),va=Qa.merge(a.object({user:a.lazy(()=>n).nullish()})).partial();oa.merge(a.object({user:a.lazy(()=>n).nullish()}).partial());const U=a.lazy(()=>a.union([a.string(),a.number(),a.boolean(),a.literal(null),a.record(a.lazy(()=>U.optional())),a.array(a.lazy(()=>U))])),ua=a.object({id:a.string(),type:a.string().nullish(),ref:a.string().nullish(),comment:a.string(),eventId:a.string().nullish(),userId:a.string(),raceId:a.string().nullish(),seriesId:a.string().nullish(),organizationId:a.string().nullish(),venueId:a.string().nullish(),compId:a.string().nullish(),createdAt:a.date().nullish(),updatedAt:a.date().nullish()}),Ya=ua.partial(),V=ua.merge(a.object({Event:a.lazy(()=>A).nullish(),User:a.lazy(()=>b),Likes:a.lazy(()=>J).array(),Race:a.lazy(()=>x).nullish(),Series:a.lazy(()=>G).nullish(),Organization:a.lazy(()=>K).nullish(),Venue:a.lazy(()=>D).nullish(),Comp:a.lazy(()=>N).nullish(),Follow:a.lazy(()=>F).array()})),m=Ya.merge(a.object({Event:a.lazy(()=>u).nullish(),User:a.lazy(()=>n),Likes:a.lazy(()=>d).array(),Race:a.lazy(()=>f).nullish(),Series:a.lazy(()=>I).nullish(),Organization:a.lazy(()=>p).nullish(),Venue:a.lazy(()=>g).nullish(),Comp:a.lazy(()=>z).nullish(),Follow:a.lazy(()=>c).array()})).partial();ua.merge(a.object({Event:a.lazy(()=>u).nullish(),User:a.lazy(()=>n),Likes:a.lazy(()=>d).array(),Race:a.lazy(()=>f).nullish(),Series:a.lazy(()=>I).nullish(),Organization:a.lazy(()=>p).nullish(),Venue:a.lazy(()=>g).nullish(),Comp:a.lazy(()=>z).nullish(),Follow:a.lazy(()=>c).array()}).partial());const ya=a.object({id:a.string(),type:a.string(),itemId:a.string().nullish(),userId:a.string(),commentId:a.string().nullish(),compId:a.string().nullish(),eventId:a.string().nullish(),organizationId:a.string().nullish(),venueId:a.string().nullish(),raceId:a.string().nullish(),seriesId:a.string().nullish(),updatedAt:a.date(),createdAt:a.date()}),Za=ya.partial(),F=ya.merge(a.object({Comment:a.lazy(()=>V).nullish(),Comp:a.lazy(()=>N).nullish(),Event:a.lazy(()=>A).nullish(),Organization:a.lazy(()=>K).nullish(),Venue:a.lazy(()=>D).nullish(),Race:a.lazy(()=>x).nullish(),Series:a.lazy(()=>G).nullish(),User:a.lazy(()=>b)})),c=Za.merge(a.object({Comment:a.lazy(()=>m).nullish(),Comp:a.lazy(()=>z).nullish(),Event:a.lazy(()=>u).nullish(),Organization:a.lazy(()=>p).nullish(),Venue:a.lazy(()=>g).nullish(),Race:a.lazy(()=>f).nullish(),Series:a.lazy(()=>I).nullish(),User:a.lazy(()=>n)})).partial();ya.merge(a.object({Comment:a.lazy(()=>m).nullish(),Comp:a.lazy(()=>z).nullish(),Event:a.lazy(()=>u).nullish(),Organization:a.lazy(()=>p).nullish(),Venue:a.lazy(()=>g).nullish(),Race:a.lazy(()=>f).nullish(),Series:a.lazy(()=>I).nullish(),User:a.lazy(()=>n)}).partial());const ma=a.object({id:a.string(),raceId:a.string().nullish(),uniqueRaceString:a.string(),name:a.string().nullish(),starts:U,rank:a.number().nullish(),date:a.string().nullish(),time:a.string().nullish(),notes:a.string().nullish(),sailed:a.string().nullish(),rating:a.string().nullish(),resultColumns:U,rest:U,eventId:a.string().nullish(),publisherId:a.string().nullish(),createdAt:a.date().nullish(),updatedAt:a.date().nullish()}),ae=ma.partial(),x=ma.merge(a.object({Event:a.lazy(()=>A).nullish(),Publisher:a.lazy(()=>b).nullish(),Results:a.lazy(()=>ea).array(),Follows:a.lazy(()=>F).array(),Likes:a.lazy(()=>J).array(),Comps:a.lazy(()=>N).array(),Comments:a.lazy(()=>V).array()})),f=ae.merge(a.object({Event:a.lazy(()=>u).nullish(),Publisher:a.lazy(()=>n).nullish(),Results:a.lazy(()=>L).array(),Follows:a.lazy(()=>c).array(),Likes:a.lazy(()=>d).array(),Comps:a.lazy(()=>z).array(),Comments:a.lazy(()=>m).array()})).partial();ma.merge(a.object({Event:a.lazy(()=>u).nullish(),Publisher:a.lazy(()=>n).nullish(),Results:a.lazy(()=>L).array(),Follows:a.lazy(()=>c).array(),Likes:a.lazy(()=>d).array(),Comps:a.lazy(()=>z).array(),Comments:a.lazy(()=>m).array()}).partial());const ha=a.object({id:a.string(),resultId:a.string(),points:a.string().nullish(),position:a.string().nullish(),discard:a.string().nullish(),resultType:a.string().nullish(),code:a.string().nullish(),start:a.string().nullish(),finish:a.string().nullish(),corrected:a.string().nullish(),elasped:a.string().nullish(),elapsedWin:a.string().nullish(),ratingWin:a.string().nullish(),raceRating:a.string().nullish(),supposedRating:a.string().nullish(),fleet:a.string().nullish(),rrset:a.string().nullish(),publisherId:a.string(),eventId:a.string().nullish(),compId:a.string().nullish(),raceId:a.string().nullish(),raceCompId:a.string().nullish(),createdAt:a.date().nullish(),updatedAt:a.date().nullish()}),ee=ha.partial(),ea=ha.merge(a.object({Comp:a.lazy(()=>N).nullish(),Event:a.lazy(()=>A).nullish(),Publisher:a.lazy(()=>b).nullish(),Race:a.lazy(()=>x).nullish()})),L=ee.merge(a.object({Comp:a.lazy(()=>z).nullish(),Event:a.lazy(()=>u).nullish(),Publisher:a.lazy(()=>n).nullish(),Race:a.lazy(()=>f).nullish()})).partial();ha.merge(a.object({Comp:a.lazy(()=>z).nullish(),Event:a.lazy(()=>u).nullish(),Publisher:a.lazy(()=>n).nullish(),Race:a.lazy(()=>f).nullish()}).partial());const ca=a.object({id:a.string(),role:a.string(),compId:a.string()}),le=ca.partial(),te=ca.merge(a.object({Comp:a.lazy(()=>N)})),Aa=le.merge(a.object({Comp:a.lazy(()=>z)})).partial();ca.merge(a.object({Comp:a.lazy(()=>z)}).partial());const za=a.object({id:a.string(),compId:a.string(),description:a.string().nullish(),raceId:a.string().nullish(),club:a.string().nullish(),boat:a.string().nullish(),skipper:a.string().nullish(),sailno:a.string().nullish(),fleet:a.string().nullish(),division:a.string().nullish(),rating:a.string().nullish(),rank:a.string().nullish(),nett:a.string().nullish(),total:a.string().nullish(),rest:U,image:a.string().nullish(),publisherId:a.string().nullish(),createdAt:a.date().nullish(),updatedAt:a.date().nullish()}),re=za.partial(),N=za.merge(a.object({Publisher:a.lazy(()=>b).nullish(),Events:a.lazy(()=>A).array(),Results:a.lazy(()=>ea).array(),Follows:a.lazy(()=>F).array(),Likes:a.lazy(()=>J).array(),Commments:a.lazy(()=>V).array(),Races:a.lazy(()=>x).array(),UserComps:a.lazy(()=>te).array()})),z=re.merge(a.object({Publisher:a.lazy(()=>n).nullish(),Events:a.lazy(()=>u).array(),Results:a.lazy(()=>L).array(),Follows:a.lazy(()=>c).array(),Likes:a.lazy(()=>d).array(),Commments:a.lazy(()=>m).array(),Races:a.lazy(()=>f).array(),UserComps:a.lazy(()=>Aa).array()})).partial();za.merge(a.object({Publisher:a.lazy(()=>n).nullish(),Events:a.lazy(()=>u).array(),Results:a.lazy(()=>L).array(),Follows:a.lazy(()=>c).array(),Likes:a.lazy(()=>d).array(),Commments:a.lazy(()=>m).array(),Races:a.lazy(()=>f).array(),UserComps:a.lazy(()=>Aa).array()}).partial());const da=a.object({id:a.string(),userId:a.string(),type:a.string(),itemId:a.string().nullish(),seriesId:a.string().nullish(),eventId:a.string().nullish(),organizationId:a.string().nullish(),raceId:a.string().nullish(),compId:a.string().nullish(),updatedAt:a.date(),createdAt:a.date(),eventCommentId:a.string().nullish(),commentId:a.string().nullish(),venueId:a.string().nullish()}),se=da.partial(),J=da.merge(a.object({Comp:a.lazy(()=>N).nullish(),Event:a.lazy(()=>A).nullish(),Organization:a.lazy(()=>K).nullish(),Race:a.lazy(()=>x).nullish(),Series:a.lazy(()=>G).nullish(),User:a.lazy(()=>b),Comment:a.lazy(()=>V).nullish(),Venue:a.lazy(()=>D).nullish()})),d=se.merge(a.object({Comp:a.lazy(()=>z).nullish(),Event:a.lazy(()=>u).nullish(),Organization:a.lazy(()=>p).nullish(),Race:a.lazy(()=>f).nullish(),Series:a.lazy(()=>I).nullish(),User:a.lazy(()=>n),Comment:a.lazy(()=>m).nullish(),Venue:a.lazy(()=>g).nullish()})).partial();da.merge(a.object({Comp:a.lazy(()=>z).nullish(),Event:a.lazy(()=>u).nullish(),Organization:a.lazy(()=>p).nullish(),Race:a.lazy(()=>f).nullish(),Series:a.lazy(()=>I).nullish(),User:a.lazy(()=>n),Comment:a.lazy(()=>m).nullish(),Venue:a.lazy(()=>g).nullish()}).partial());const ga=a.object({id:a.string(),label:a.string(),type:a.string().nullish(),email:a.string().nullish(),phone:a.string().nullish(),addressId:a.string().nullish(),userId:a.string().nullish(),venueId:a.string().nullish(),organizationId:a.string().nullish(),createdAt:a.date().nullish(),updatedAt:a.date().nullish()}),ie=ga.partial(),la=ga.merge(a.object({Address:a.lazy(()=>ta).nullish(),User:a.lazy(()=>b).nullish(),Venue:a.lazy(()=>D).nullish(),Organization:a.lazy(()=>K).nullish()})),q=ie.merge(a.object({Address:a.lazy(()=>T).nullish(),User:a.lazy(()=>n).nullish(),Venue:a.lazy(()=>g).nullish(),Organization:a.lazy(()=>p).nullish()})).partial();ga.merge(a.object({Address:a.lazy(()=>T).nullish(),User:a.lazy(()=>n).nullish(),Venue:a.lazy(()=>g).nullish(),Organization:a.lazy(()=>p).nullish()}).partial());const pa=a.object({id:a.string(),label:a.string(),po:a.string().nullish(),street:a.string().nullish(),city:a.string().nullish(),state:a.string().nullish(),country:a.string().nullish(),code:a.string().nullish(),venueId:a.string().nullish(),organizationId:a.string().nullish(),publisherId:a.string().nullish()}),ne=pa.partial(),ta=pa.merge(a.object({Venue:a.lazy(()=>D).nullish(),Organization:a.lazy(()=>K).nullish(),Publisher:a.lazy(()=>b).nullish(),Contact:a.lazy(()=>la).array()})),T=ne.merge(a.object({Venue:a.lazy(()=>g).nullish(),Organization:a.lazy(()=>p).nullish(),Publisher:a.lazy(()=>n).nullish(),Contact:a.lazy(()=>q).array()})).partial();pa.merge(a.object({Venue:a.lazy(()=>g).nullish(),Organization:a.lazy(()=>p).nullish(),Publisher:a.lazy(()=>n).nullish(),Contact:a.lazy(()=>q).array()}).partial());const ba=a.object({id:a.string(),name:a.string(),description:a.string().nullish(),website:a.string().nullish(),email:a.string().nullish(),phone:a.string().nullish(),burgee:a.string().nullish(),titleImage:a.string().nullish(),publisherId:a.string().nullish(),createdAt:a.date().nullish(),updatedAt:a.date().nullish()}),oe=ba.partial(),D=ba.merge(a.object({Events:a.lazy(()=>A).array(),Series:a.lazy(()=>G).array(),Likes:a.lazy(()=>J).array(),Follows:a.lazy(()=>F).array(),Comments:a.lazy(()=>V).array(),Addresses:a.lazy(()=>ta).array(),Contacts:a.lazy(()=>la).array(),Publisher:a.lazy(()=>b).nullish()})),g=oe.merge(a.object({Events:a.lazy(()=>u).array(),Series:a.lazy(()=>I).array(),Likes:a.lazy(()=>d).array(),Follows:a.lazy(()=>c).array(),Comments:a.lazy(()=>m).array(),Addresses:a.lazy(()=>T).array(),Contacts:a.lazy(()=>q).array(),Publisher:a.lazy(()=>n).nullish()})).partial();ba.merge(a.object({Events:a.lazy(()=>u).array(),Series:a.lazy(()=>I).array(),Likes:a.lazy(()=>d).array(),Follows:a.lazy(()=>c).array(),Comments:a.lazy(()=>m).array(),Addresses:a.lazy(()=>T).array(),Contacts:a.lazy(()=>q).array(),Publisher:a.lazy(()=>n).nullish()}).partial());const fa=a.object({id:a.string(),eventeid:a.string().nullish(),uniqueIdString:a.string(),name:a.string(),eventwebsite:a.string().nullish(),venueName:a.string().nullish(),description:a.string().nullish(),titleImage:a.string().nullish(),public:a.boolean(),complete:a.boolean(),fileInfo:U,resultColumns:U,rest:U,email:a.string().nullish(),organizationId:a.string().nullish(),publisherId:a.string().nullish(),seriesId:a.string().nullish(),venueId:a.string().nullish(),createdAt:a.date().nullish(),updatedAt:a.date().nullish()}),ue=fa.partial(),A=fa.merge(a.object({Organization:a.lazy(()=>K).nullish(),Publisher:a.lazy(()=>b).nullish(),Series:a.lazy(()=>G).nullish(),Venue:a.lazy(()=>D).nullish(),Races:a.lazy(()=>x).array(),Results:a.lazy(()=>ea).array(),Follows:a.lazy(()=>F).array(),Likes:a.lazy(()=>J).array(),Comps:a.lazy(()=>N).array(),Comments:a.lazy(()=>V).array()})),u=ue.merge(a.object({Organization:a.lazy(()=>p).nullish(),Publisher:a.lazy(()=>n).nullish(),Series:a.lazy(()=>I).nullish(),Venue:a.lazy(()=>g).nullish(),Races:a.lazy(()=>f).array(),Results:a.lazy(()=>L).array(),Follows:a.lazy(()=>c).array(),Likes:a.lazy(()=>d).array(),Comps:a.lazy(()=>z).array(),Comments:a.lazy(()=>m).array()})).partial();fa.merge(a.object({Organization:a.lazy(()=>p).nullish(),Publisher:a.lazy(()=>n).nullish(),Series:a.lazy(()=>I).nullish(),Venue:a.lazy(()=>g).nullish(),Races:a.lazy(()=>f).array(),Results:a.lazy(()=>L).array(),Follows:a.lazy(()=>c).array(),Likes:a.lazy(()=>d).array(),Comps:a.lazy(()=>z).array(),Comments:a.lazy(()=>m).array()}).partial());const Ia=a.object({id:a.string(),username:a.string(),firstname:a.string().nullish(),lastname:a.string().nullish(),email:a.string().nullish(),email_verified:a.number().nullish(),name:a.string().nullish(),avatar:a.string().nullish()}),ye=Ia.partial(),b=Ia.merge(a.object({auth_session:a.lazy(()=>xa).array(),auth_key:a.lazy(()=>Ha).array(),UserSettings:a.lazy(()=>Xa).nullish(),Series:a.lazy(()=>G).array(),Event:a.lazy(()=>A).array(),Race:a.lazy(()=>x).array(),Comp:a.lazy(()=>N).array(),Result:a.lazy(()=>ea).array(),Organization:a.lazy(()=>K).array(),Venue:a.lazy(()=>D).array(),follow:a.lazy(()=>F).array(),like:a.lazy(()=>J).array(),Comment:a.lazy(()=>V).array(),Address:a.lazy(()=>ta).array(),Contact:a.lazy(()=>la).array()})),n=ye.merge(a.object({auth_session:a.lazy(()=>$a).array(),auth_key:a.lazy(()=>ja).array(),UserSettings:a.lazy(()=>va).nullish(),Series:a.lazy(()=>I).array(),Event:a.lazy(()=>u).array(),Race:a.lazy(()=>f).array(),Comp:a.lazy(()=>z).array(),Result:a.lazy(()=>L).array(),Organization:a.lazy(()=>p).array(),Venue:a.lazy(()=>g).array(),follow:a.lazy(()=>c).array(),like:a.lazy(()=>d).array(),Comment:a.lazy(()=>m).array(),Address:a.lazy(()=>T).array(),Contact:a.lazy(()=>q).array()})).partial();Ia.merge(a.object({auth_session:a.lazy(()=>$a).array(),auth_key:a.lazy(()=>ja).array(),UserSettings:a.lazy(()=>va).nullish(),Series:a.lazy(()=>I).array(),Event:a.lazy(()=>u).array(),Race:a.lazy(()=>f).array(),Comp:a.lazy(()=>z).array(),Result:a.lazy(()=>L).array(),Organization:a.lazy(()=>p).array(),Venue:a.lazy(()=>g).array(),follow:a.lazy(()=>c).array(),like:a.lazy(()=>d).array(),Comment:a.lazy(()=>m).array(),Address:a.lazy(()=>T).array(),Contact:a.lazy(()=>q).array()}).partial());const ra=a.object({id:a.string(),name:a.string(),description:a.string().nullish(),tag:a.string().nullish(),website:a.string().nullish(),email:a.string().nullish(),logo:a.string().nullish(),titleImage:a.string().nullish(),ownerId:a.string().nullish(),createdAt:a.date().nullish(),updatedAt:a.date().nullish()}),me=ra.partial(),K=ra.merge(a.object({Owner:a.lazy(()=>b).nullish(),Events:a.lazy(()=>A).array(),Series:a.lazy(()=>G).array(),Follows:a.lazy(()=>F).array(),Likes:a.lazy(()=>J).array(),Comments:a.lazy(()=>V).array(),Addresses:a.lazy(()=>ta).array(),Contact:a.lazy(()=>la).array()})),p=me.merge(a.object({Owner:a.lazy(()=>n).nullish(),Events:a.lazy(()=>u).array(),Series:a.lazy(()=>I).array(),Follows:a.lazy(()=>c).array(),Likes:a.lazy(()=>d).array(),Comments:a.lazy(()=>m).array(),Addresses:a.lazy(()=>T).array(),Contact:a.lazy(()=>q).array()})).partial();ra.merge(a.object({Owner:a.lazy(()=>n).nullish(),Events:a.lazy(()=>u).array(),Series:a.lazy(()=>I).array(),Follows:a.lazy(()=>c).array(),Likes:a.lazy(()=>d).array(),Comments:a.lazy(()=>m).array(),Addresses:a.lazy(()=>T).array(),Contact:a.lazy(()=>q).array()}).partial());const Sa=a.object({id:a.string(),name:a.string(),description:a.string().nullish(),logo:a.string().nullish(),titleImage:a.string().nullish(),website:a.string().nullish(),public:a.boolean().nullish(),complete:a.boolean().nullish(),organizationId:a.string().nullish(),publisherId:a.string().nullish(),createdAt:a.date().nullish(),updatedAt:a.date().nullish()}),he=Sa.partial(),G=Sa.merge(a.object({Organization:a.lazy(()=>K).nullish(),Publisher:a.lazy(()=>b).nullish(),Events:a.lazy(()=>A).array(),Follows:a.lazy(()=>F).array(),Likes:a.lazy(()=>J).array(),Comments:a.lazy(()=>V).array(),Venues:a.lazy(()=>D).array()})),I=he.merge(a.object({Organization:a.lazy(()=>p).nullish(),Publisher:a.lazy(()=>n).nullish(),Events:a.lazy(()=>u).array(),Follows:a.lazy(()=>c).array(),Likes:a.lazy(()=>d).array(),Comments:a.lazy(()=>m).array(),Venues:a.lazy(()=>g).array()})).partial();Sa.merge(a.object({Organization:a.lazy(()=>p).nullish(),Publisher:a.lazy(()=>n).nullish(),Events:a.lazy(()=>u).array(),Follows:a.lazy(()=>c).array(),Likes:a.lazy(()=>d).array(),Comments:a.lazy(()=>m).array(),Venues:a.lazy(()=>g).array()}).partial());const ce=a.object({id:a.string(),user_id:a.string(),expires:a.bigint()});ce.partial();a.enum(["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]);a.enum(["id","name","description","logo","titleImage","website","public","complete","organizationId","publisherId","createdAt","updatedAt"]);a.enum(["id","eventeid","uniqueIdString","name","eventwebsite","venueName","description","titleImage","public","complete","fileInfo","resultColumns","rest","email","organizationId","publisherId","seriesId","venueId","createdAt","updatedAt"]);a.enum(["id","raceId","uniqueRaceString","name","starts","rank","date","time","notes","sailed","rating","resultColumns","rest","eventId","publisherId","createdAt","updatedAt"]);a.enum(["id","compId","description","raceId","club","boat","skipper","sailno","fleet","division","rating","rank","nett","total","rest","image","publisherId","createdAt","updatedAt"]);a.enum(["id","resultId","points","position","discard","resultType","code","start","finish","corrected","elasped","elapsedWin","ratingWin","raceRating","supposedRating","fleet","rrset","publisherId","eventId","compId","raceId","raceCompId","createdAt","updatedAt"]);a.enum(["id","name","description","tag","website","email","logo","titleImage","ownerId","createdAt","updatedAt"]);a.enum(["id","name","description","website","email","phone","burgee","titleImage","publisherId","createdAt","updatedAt"]);a.enum(["id","label","po","street","city","state","country","code","venueId","organizationId","publisherId"]);a.enum(["id","label","type","email","phone","addressId","userId","venueId","organizationId","createdAt","updatedAt"]);a.enum(["id","type","ref","comment","eventId","userId","raceId","seriesId","organizationId","venueId","compId","createdAt","updatedAt"]);a.enum(["id","type","itemId","userId","commentId","compId","eventId","organizationId","venueId","raceId","seriesId","updatedAt","createdAt"]);a.enum(["id","userId","type","itemId","seriesId","eventId","organizationId","raceId","compId","updatedAt","createdAt","eventCommentId","commentId","venueId"]);a.enum(["id","username","firstname","lastname","email","email_verified","name","avatar"]);a.enum(["id","role","compId"]);a.enum(["id","theme","language","userId"]);a.enum(["id","user_id","active_expires","idle_expires"]);a.enum(["id","hashed_password","user_id"]);a.enum(["id","user_id","expires"]);a.enum(["asc","desc"]);const ze=Ka;var Z=ze;a.enum(["DbNull","JsonNull"]).transform(r=>r==="JsonNull"?Z.Prisma.JsonNull:r==="DbNull"?Z.Prisma.DbNull:r);a.enum(["default","insensitive"]);a.enum(["first","last"]);a.enum(["DbNull","JsonNull","AnyNull"]).transform(r=>r==="JsonNull"||r==="DbNull"?Z.Prisma.JsonNull:r==="AnyNull"?Z.Prisma.AnyNull:r);const Ra=a.lazy(()=>a.union([a.string(),a.number(),a.boolean(),a.object({toJSON:a.function(a.tuple([]),a.any())}),a.record(a.lazy(()=>a.union([Ra,a.literal(null)]))),a.array(a.lazy(()=>a.union([Ra,a.literal(null)])))]));function de(r){let l;return{c(){l=_a("Submit")},l(s){l=wa(s,"Submit")},m(s,t){W(s,l,t)},d(s){s&&v(l)}}}function ge(r){let l;return{c(){l=Oa("span"),this.h()},l(s){l=ka(s,"SPAN",{class:!0}),Ea(l).forEach(v),this.h()},h(){Wa(l,"class","loading loading-dots loading-md")},m(s,t){W(s,l,t)},d(s){s&&v(l)}}}function pe(r){let l;function s(i,S){return i[1]||i[2]?ge:de}let t=s(r),o=t(r);return{c(){o.c(),l=Ca()},l(i){o.l(i),l=Ca()},m(i,S){o.m(i,S),W(i,l,S)},p(i,S){t!==(t=s(i))&&(o.d(1),o=t(i),o&&(o.c(),o.m(l.parentNode,l)))},d(i){i&&v(l),o.d(i)}}}function be(r){let l,s,t,o,i,S,C,M,R,B,$,y,j,H;return l=new Y({props:{name:"name",formObj:r[3]}}),t=new Y({props:{name:"logo",formObj:r[3]}}),i=new qa({props:{name:"description",rows:3,formObj:r[3]}}),C=new Y({props:{name:"website",formObj:r[3]}}),R=new Y({props:{name:"email",type:"email",formObj:r[3]}}),$=new Y({props:{name:"titleImage",label:"Title Image Url",formObj:r[3]}}),j=new Ta({props:{disabled:r[1],$$slots:{default:[pe]},$$scope:{ctx:r}}}),{c(){P(l.$$.fragment),s=Q(),P(t.$$.fragment),o=Q(),P(i.$$.fragment),S=Q(),P(C.$$.fragment),M=Q(),P(R.$$.fragment),B=Q(),P($.$$.fragment),y=Q(),P(j.$$.fragment)},l(e){_(l.$$.fragment,e),s=X(e),_(t.$$.fragment,e),o=X(e),_(i.$$.fragment,e),S=X(e),_(C.$$.fragment,e),M=X(e),_(R.$$.fragment,e),B=X(e),_($.$$.fragment,e),y=X(e),_(j.$$.fragment,e)},m(e,h){w(l,e,h),W(e,s,h),w(t,e,h),W(e,o,h),w(i,e,h),W(e,S,h),w(C,e,h),W(e,M,h),w(R,e,h),W(e,B,h),w($,e,h),W(e,y,h),w(j,e,h),H=!0},p(e,h){const sa={};h&2&&(sa.disabled=e[1]),h&518&&(sa.$$scope={dirty:h,ctx:e}),j.$set(sa)},i(e){H||(O(l.$$.fragment,e),O(t.$$.fragment,e),O(i.$$.fragment,e),O(C.$$.fragment,e),O(R.$$.fragment,e),O($.$$.fragment,e),O(j.$$.fragment,e),H=!0)},o(e){k(l.$$.fragment,e),k(t.$$.fragment,e),k(i.$$.fragment,e),k(C.$$.fragment,e),k(R.$$.fragment,e),k($.$$.fragment,e),k(j.$$.fragment,e),H=!1},d(e){e&&(v(s),v(o),v(S),v(M),v(B),v(y)),E(l,e),E(t,e),E(i,e),E(C,e),E(R,e),E($,e),E(j,e)}}}function fe(r){let l,s;return l=new Ja({props:{formObj:r[3],$$slots:{default:[be]},$$scope:{ctx:r}}}),{c(){P(l.$$.fragment)},l(t){_(l.$$.fragment,t)},m(t,o){w(l,t,o),s=!0},p(t,o){const i={};o&518&&(i.$$scope={dirty:o,ctx:t}),l.$set(i)},i(t){s||(O(l.$$.fragment,t),s=!0)},o(t){k(l.$$.fragment,t),s=!1},d(t){E(l,t)}}}function Ie(r){let l,s;return l=new Da({props:{title:r[0].name==="New Organization"?"Add a new Organization":"Edit Organization",$$slots:{default:[fe]},$$scope:{ctx:r}}}),{c(){P(l.$$.fragment)},l(t){_(l.$$.fragment,t)},m(t,o){w(l,t,o),s=!0},p(t,[o]){const i={};o&1&&(i.title=t[0].name==="New Organization"?"Add a new Organization":"Edit Organization"),o&518&&(i.$$scope={dirty:o,ctx:t}),l.$set(i)},i(t){s||(O(l.$$.fragment,t),s=!0)},o(t){k(l.$$.fragment,t),s=!1},d(t){E(l,t)}}}function Se(r,l,s){let t,o,i,S;aa(r,La,y=>s(8,t=y));let{data:C}=l;const M=Na(C.form,{autoFocusOnError:!0,taintedMessage:"Finish filling out the form or your information will be lost?",validators:ra,onUpdated(){const y=t.url.searchParams.get("from");t.url.searchParams.delete("from"),Fa(y+t.url.search,{replaceState:!0})},flashMessage:{module:Ma,onError:({result:y,message:j})=>{const H=y.error.message;j.set({type:"error",message:H})}}}),{form:R,delayed:B,timeout:$}=M;return aa(r,R,y=>s(0,o=y)),aa(r,B,y=>s(1,i=y)),aa(r,$,y=>s(2,S=y)),r.$$set=y=>{"data"in y&&s(7,C=y.data)},[o,i,S,M,R,B,$,C]}class Ue extends Ua{constructor(l){super(),Va(this,l,Se,Ie,Pa,{data:7})}}export{Ue as component};
